notify_pesiphone6:
  alias: "Notify iPhone Pe"
  sequence:
    - service: notify.ios_pesiphone6
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'
        data:
          push:
            badge: 1
            category: "ALERT"

notify_juesiphone6splus:
  alias: "Notify iPhone Jue"
  sequence:
    - service: notify.ios_juesiphone6splus
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'
        data:
          push:
            badge: 1
            category: "ALERT"

notify_pesiphone6_juesiphone6splus:
  alias: "Notify iPhone Pe & Jue"
  sequence:
    - service: notify.ios_pesiphone6
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'
        data:
          push:
            badge: 1
            category: "ALERT"
    - service: notify.ios_juesiphone6splus
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'
        data:
          push:
            badge: 1
            category: "ALERT"

flashing_long:
  alias: "Light Flash Long"
  sequence:
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: long

flashing_short:
  alias: "Light Flash Short"
  sequence:
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short

flashing_once:
  alias: "Light Flash Once"
  sequence:
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short

ss_volume_down:
  alias: "Volume Fade Down"
  sequence:
    - condition: template
      value_template: '{{ is_state("media_player.itunes", "playing") }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.025 }}'

ss_volume_up:
  alias: "Volume Fade Up"
  sequence:
    - condition: template
      value_template: '{{ is_state("media_player.itunes", "playing") }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.025 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.025 }}'

s_speak:
  alias: "Sub-notify script Speak"
  sequence:
    - condition: template
      value_template: '{{ (speak != "false" and is_state("binary_sensor.pepe", "on")) }}'
    - service: script.ss_volume_down
    - wait_template: '{{ is_state("script.volume_down", "off") }}'
      timeout: 00:00:01
    - service: media_player.volume_set
      data:
        entity_id: media_player.music_player_daemon
        volume_level: 1.0
    - service: media_player.play_media
      data_template:
        entity_id: media_player.music_player_daemon
        media_content_id: '{% if audio == "pip "%}http://phumin.synology.me:7575/local/sounds/pip.mp3{% elif audio == "horn" %}http://phumin.synology.me:7575/local/sounds/horn.mp3{% elif audio == "siren" %}http://phumin.synology.me:7575/local/sounds/siren.mp3{% elif audio == "chime" %}http://phumin.synology.me:7575/local/sounds/chime.mp3{% else %}http://phumin.synology.me:7575/local/sounds/sinewave.mp3{% endif %}'
        media_content_type: "audio/mp3"
    - delay: 00:00:01
    - service: tts.google_say
      data_template:
        entity_id: media_player.music_player_daemon
        message: "{{ title }} {{ now().strftime('%H:%M') }}"
    - delay: 00:00:03
    - service: script.ss_volume_up
    - wait_template: '{{ is_state("script.volume_up", "off") }}'
      timeout: 00:00:01

s_email:
  alias: "Sub-notify script Email"
  sequence:
    - condition: template
      value_template: '{{ email != "false" }}'
    - service: notify.email
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'

s_tv:
  alias: "Sub-notify script TV"
  sequence:
    - condition: template
      value_template: '{{ (tv != "false" and is_state("media_player.denon", "on")) }}'
    - service: notify.tv
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'

s_mobile:
  alias: "Sub-notify script Mobile"
  sequence:
    - condition: template
      value_template: '{{ mobile != "false" }}'
    - service_template: '{% if mobile == "pe" %}script.notify_pesiphone6{% elif mobile == "jue" %}script.notify_juesiphone6splus{% elif mobile == "both" %}script.notify_pesiphone6_juesiphone6splus{% else %}script.notify_pesiphone6{% endif %}'
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'

s_light:
  alias: "Sub-notify script Light"
  sequence:
    - condition: template
      value_template: '{{ light != "false" }}'
    - service_template: '{% if light == "long" %}script.flashing_long{% elif light == "short" %}script.flashing_short{% elif light == "once" %}script.flashing_once{% endif %}'

notifying:
  alias: "Notify script"
  sequence:
    - service: script.s_light
      data_template:
        light: '{{ light if (light == "long" or light == "short" or light == "once" or light == "false") else "false" }}'
    - delay: 00:00:02
    - service: script.s_email
      data_template:
        email: '{{ email if (email == "true" or email == "false") else "true" }}'
        title: '{{ title }}'
        message: '{{ message }}'
    - service: script.s_tv
      data_template:
        tv: '{{ tv if (tv == "true" or tv == "false") else "true" }}'
        title: '{{ title }}'
        message: '{{ message }}'
    - service: script.s_speak
      data_template:
        speak: '{{ speak if (speak == "true" or speak == "false") else "true" }}'
        audio: '{{ audio if (audio == "siren" or audio == "pip" or audio == "chime" or audio == "horn" or audio == "sinewave") else "sinewave" }}'
        title: '{{ title }}'
        message: '{{ message }}'
    - service: script.s_mobile
      data_template:
        mobile: '{{ mobile if (mobile == "pe" or mobile == "jue" or mobile == "both" or mobile == "false") else "false" }}'
        title: '{{ title }}'
        message: '{{ message }}'
