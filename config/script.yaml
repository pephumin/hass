flashing_long:
  alias: "Flashing Long and Notify"
  sequence:
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: long
    - service: script.notifying
      data_template:
        mobile: '{{ mobile if mobile != "" else "true" }}'
        audio: '{{ audio if audio != "" else "siren" }}'
        title: '{{ title }}'
        message: '{{ message }}'

flashing_short:
  alias: "Flashing Short and Notify"
  sequence:
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - delay: 00:00:01
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - service: script.notifying
      data_template:
        mobile: '{{ mobile if mobile != "" else "false" }}'
        audio: '{{ audio if audio != "" else "pip" }}'
        title: '{{ title }}'
        message: '{{ message }}'

flashing_once:
  alias: "Flashing Once and Notify"
  sequence:
    - service: light.turn_on
      entity_id: group.flashlights
      data:
        transition: 1
        brightness: 250
        flash: short
    - service: script.notifying
      data_template:
        mobile: '{{ mobile if mobile != "" else "false" }}'
        audio: '{{ audio if audio != "" else "chime" }}'
        title: '{{ title }}'
        message: '{{ message }}'

notifying:
  alias: "Notify to TV, email, and voice"
  sequence:
    - service: notify.email
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'
    - service: script.notifying_voice
      data_template:
        mobile: '{{ mobile }}'
        audio: '{{ audio }}'
        title: '{{ title }}'
        message: '{{ message }}'
    - condition: template
      value_template: '{% if is_state("media_player.denon", "on") %}true{% else %}false{% endif %}'
    - service: notify.tv
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'

volume_down:
  alias: "Volume Fade Down"
  sequence:
    - condition: template
      value_template: '{% if is_state("media_player.itunes", "playing") %}true{% else %}false{% endif %}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) - 0.02 }}'

volume_up:
  alias: "Volume Fade Up"
  sequence:
    - condition: template
      value_template: '{% if is_state("media_player.itunes", "playing") %}true{% else %}false{% endif %}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.02 }}'
    - service: media_player.volume_set
      entity_id: media_player.itunes
      data_template:
        volume_level: '{{ float(states.media_player.itunes.attributes.volume_level) + 0.02 }}'

notifying_voice:
  alias: "Notify with voice to Macbook Pro"
  sequence:
    - service: script.volume_down
    - wait_template: '{{ states.script.volume_down.state == "off" }}'
      timeout: 00:00:01
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.music_player_daemon
        volume_level: 1.0
    - service: media_player.play_media
      data_template:
        entity_id: media_player.music_player_daemon
        # media_content_id: '{% if audio == "pip "%}http://192.168.1.100:8123/local/sounds/pip.mp3{% elif audio == "horn" %}http://192.168.1.100:8123/local/sounds/horn.mp3{% elif audio == "siren" %}http://192.168.1.100:8123/local/sounds/siren.mp3{% elif audio == "chime" %}http://192.168.1.100:8123/local/sounds/chime.mp3{% else %}http://192.168.1.100:8123/local/sounds/sinewave.mp3{% endif %}'
        media_content_id: '{% if audio == "pip "%}http://phumin.synology.me:7575/local/sounds/pip.mp3{% elif audio == "horn" %}http://phumin.synology.me:7575/local/sounds/horn.mp3{% elif audio == "siren" %}http://phumin.synology.me:7575/local/sounds/siren.mp3{% elif audio == "chime" %}http://phumin.synology.me:7575/local/sounds/chime.mp3{% else %}http://phumin.synology.me:7575/local/sounds/sinewave.mp3{% endif %}'
        media_content_type: "audio/mp3"
    - delay: 00:00:00
    - service: tts.google_say
      data_template:
        entity_id: media_player.music_player_daemon
        # message: '{{ title }}'
        message: "{{ title }} {{ now().strftime('%H:%M') }}"
    # - wait_template: '{{ states.media_player.music_player_daemon.state == "off" }}'
    #   timeout: 00:00:01
    - delay: 00:00:05
    - service: media_player.play_media
      data_template:
        entity_id: media_player.music_player_daemon
        # media_content_id: '{% if audio == "pip "%}http://192.168.1.100:8123/local/sounds/pip.mp3{% elif audio == "horn" %}http://192.168.1.100:8123/local/sounds/horn.mp3{% elif audio == "siren" %}http://192.168.1.100:8123/local/sounds/siren.mp3{% elif audio == "chime" %}http://192.168.1.100:8123/local/sounds/chime.mp3{% else %}http://192.168.1.100:8123/local/sounds/sinewave.mp3{% endif %}'
        # media_content_id: '{% if audio == "pip "%}http://phumin.synology.me:7575/local/sounds/pip.mp3{% elif audio == "horn" %}http://phumin.synology.me:7575/local/sounds/horn.mp3{% elif audio == "siren" %}http://phumin.synology.me:7575/local/sounds/siren.mp3{% elif audio == "chime" %}http://phumin.synology.me:7575/local/sounds/chime.mp3{% else %}http://phumin.synology.me:7575/local/sounds/sinewave.mp3{% endif %}'
        media_content_id: '{{ ["http://phumin.synology.me:7575/local/sounds/pip.mp3", "http://phumin.synology.me:7575/local/sounds/horn.mp3", "http://phumin.synology.me:7575/local/sounds/siren.mp3", "http://phumin.synology.me:7575/local/sounds/chime.mp3", "http://phumin.synology.me:7575/local/sounds/sinewave.mp3"] | random }}'
        media_content_type: "audio/mp3"
    - delay: 00:00:00
    - service: script.volume_up
    - wait_template: '{{ states.script.volume_up.state == "off" }}'
      timeout: 00:00:01
    - condition: template
      value_template: '{{ "true" if mobile == "true" else "false" }}'
    - service: script.notify_pesiphone6
      data_template:
        title: '{{ title }}'
        message: '{{ message }}'
