counter:
  foscammotion:
    name: "Foscam Motion Activation"
    initial: 0
    step: 1
    icon: mdi:counter

camera:
  - platform: synology
    url: !secret synology
    username: !secret my_username
    password: !secret my_longer_password
    timeout: 15
    verify_ssl: false
  # - platform: foscam
  #   name: "Common Room"
  #   ip: !secret foscam_black_ip
  #   port: !secret foscam_black_port
  #   username: !secret my_username
  #   password: !secret my_password
  # - platform: foscam
  #   name: "First Floor"
  #   ip: !secret foscam_white_ip
  #   port: !secret foscam_white_port
  #   username: !secret my_username
  #   password: !secret my_password

shell_command:
  foscam_black_command_on: !secret foscam_black_command_on
  foscam_black_command_off: !secret foscam_black_command_off
  foscam_black_command_state: !secret foscam_black_command_state
  foscam_black_present_1: !secret foscam_black_present_1
  foscam_black_present_2: !secret foscam_black_present_2
  foscam_black_present_3: !secret foscam_black_present_3
  foscam_black_present_4: !secret foscam_black_present_4
  foscam_black_reboot: !secret foscam_black_reboot
  foscam_black_scan_0: !secret foscam_black_scan_0
  foscam_black_scan_1: !secret foscam_black_scan_1
  foscam_black_scan_2: !secret foscam_black_scan_2
  foscam_black_scan_3: !secret foscam_black_scan_3
  foscam_white_command_on: !secret foscam_white_command_on
  foscam_white_command_off: !secret foscam_white_command_off
  foscam_white_command_state: !secret foscam_white_command_state
  foscam_white_present_1: !secret foscam_white_present_1
  foscam_white_present_2: !secret foscam_white_present_2
  foscam_white_present_3: !secret foscam_white_present_3
  foscam_white_present_4: !secret foscam_white_present_4
  foscam_white_reboot: !secret foscam_white_reboot
  foscam_white_scan_0: !secret foscam_white_scan_0
  foscam_white_scan_1: !secret foscam_white_scan_1
  foscam_white_scan_2: !secret foscam_white_scan_2
  foscam_white_scan_3: !secret foscam_white_scan_3

switch:
  - platform: command_line
    name: "Foscam Black Motion Detection"
    switches:
      foscam_black_motion:
        command_on: !secret foscam_black_command_on
        command_off: !secret foscam_black_command_off
        command_state: !secret foscam_black_command_state
        value_template: '{{ value == "1" }}'
  - platform: command_line
    name: "Foscam White Motion Detection"
    switches:
      foscam_white_motion:
        command_on: !secret foscam_white_command_on
        command_off: !secret foscam_white_command_off
        command_state: !secret foscam_white_command_state
        value_template: '{{ value == "1" }}'

script:
  motion_detection_activate:
    alias: "Motion Detection Activate"
    sequence:
      - service: switch.turn_on
        entity_id: switch.foscam_black_motion
      - service: switch.turn_on
        entity_id: switch.foscam_white_motion
      - service: counter.increment
        entity_id: counter.foscammotion
  motion_detection_deactivate:
    alias: "Motion Detection Deactivate"
    sequence:
      - service: switch.turn_off
        entity_id: switch.foscam_black_motion
      - service: switch.turn_off
        entity_id: switch.foscam_white_motion
  black_scan:
    alias: "Foscam Black Scan Starts"
    sequence:
      - service: shell_command.foscam_black_present_2
      - delay: 00:00:25
      - service: shell_command.foscam_black_present_3
      - delay: 00:00:15
      - service: shell_command.foscam_black_present_4
      - service: script.black_scan_loop
  black_scan_loop:
    alias: "Foscam Black Scan Loops"
    sequence:
      - delay: 00:00:15
      - service: script.black_scan
  black_scan_stop:
    alias: "Foscam Black Scan Stops"
    sequence:
      - service: script.turn_off
        entity_id: script.black_scan
      - service: script.turn_off
        entity_id: script.black_scan_loop
      - service: shell_command.foscam_black_present_1
  white_scan:
    alias: "Foscam White Scan Starts"
    sequence:
      - service: shell_command.foscam_white_present_2
      - delay: 00:00:30
      - service: shell_command.foscam_white_present_3
      - delay: 00:00:15
      - service: shell_command.foscam_white_present_4
      - service: script.white_scan_loop
  white_scan_loop:
    alias: "Foscam White Scan Loops"
    sequence:
      - delay: 00:00:10
      - service: script.white_scan
  white_scan_stop:
    alias: "Foscam White Scan Stops"
    sequence:
      - service: script.turn_off
        entity_id: script.white_scan
      - service: script.turn_off
        entity_id: script.white_scan_loop
      - service: shell_command.foscam_white_present_1

automation:

  - alias: "Foscam Black Motion Detection Enable"
    trigger:
      - platform: state
        entity_id: switch.foscam_black_motion
        from: 'off'
        to: 'on'
    action:
      - service: script.black_scan

  - alias: "Foscam Black Motion Detection Disable"
    trigger:
      - platform: state
        entity_id: switch.foscam_black_motion
        from: 'on'
        to: 'off'
    action:
      - service: script.black_scan_stop

  - alias: "Foscam White Motion Detection Enable"
    trigger:
      - platform: state
        entity_id: switch.foscam_white_motion
        from: 'off'
        to: 'on'
    action:
      - service: script.white_scan

  - alias: "Foscam White Motion Detection Disable"
    trigger:
      - platform: state
        entity_id: switch.foscam_white_motion
        from: 'on'
        to: 'off'
    action:
      - service: script.white_scan_stop

  - alias: "Auto Motion Detection Activation"
    trigger:
      - platform: template
        value_template: '{% if is_state("input_select.homemode", "Away") or is_state("input_select.homemode", "Vacation") or is_state("input_select.homemode", "Visitor") %}true{% else %}false{% endif %}'
    condition:
      - condition: template
        value_template: '{{ is_state("switch.foscam_black_motion", "off") or is_state("switch.foscam_white_motion", "off") }}'
    action:
      - service: script.motion_detection_activate

  - alias: "Auto Motion Detection Deactivation"
    trigger:
      - platform: template
        value_template: '{% if is_state("input_boolean.presence_pe", "on") or is_state("input_boolean.presence_jue", "on") or is_state("input_select.homemode", "Home") %}true{% else %}false{% endif %}'
    condition:
      - condition: template
        value_template: '{{ is_state("switch.foscam_black_motion", "on") or is_state("switch.foscam_white_motion", "on") }}'
    action:
      - service: script.motion_detection_deactivate
