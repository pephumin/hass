ios:
  push_categories: # Defines actionable notifications. Categories are groups of actions. You specify the category in the notification.
    # - name: Alarm
    #   identifier: 'ALARM'
    #   actions:
    #     - identifier: 'SOUND_ALARM' # Must be unique and ALL CAPS
    #       title: 'Sound Alarm' # Needs to be short!
    #       activationMode: 'background' # or background. The mode in which to run the app when the action is performed.
    #       authenticationRequired: yes # A Boolean value indicating whether the user must unlock the device before the action is performed.
    #       destructive: yes # A Boolean value indicating whether the action is destructive.  When the value of this property is true, the system displays the corresponding button differently to indicate that the action is destructive.
    #       behavior: 'default' # or TextInput. When TextInput the system provides a way for the user to enter a text response to be included with the notification.
    #       context: 'default' # or Minimal. Default = In this context, the full UI is displayed for the notification’s alert. You may specify up to four custom actions in this context. Minimal = In this context, a minimal UI is displayed for the notification’s alert. You may specify up to two custom actions in this context.
    #     - identifier: 'SILENCE_ALARM' # Must be unique and ALL CAPS
    #       title: 'Silence Alarm' # Needs to be short!
    #       activationMode: 'background' # or background. The mode in which to run the app when the action is performed.
    #       authenticationRequired: yes # A Boolean value indicating whether the user must unlock the device before the action is performed.
    #       destructive: no # A Boolean value indicating whether the action is destructive.  When the value of this property is true, the system displays the corresponding button differently to indicate that the action is destructive.
    #       behavior: 'TextInput' # Default or TextInput. When TextInput the system provides a way for the user to enter a text response to be included with the notification.
    #       context: 'default' # or Minimal. Default = In this context, the full UI is displayed for the notification’s alert. You may specify up to four custom actions in this context. Minimal = In this context, a minimal UI is displayed for the notification’s alert. You may specify up to two custom actions in this context.
    #       textInputButtonTitle: 'Silence!' # Only for iOS 10 when behavior is TextInput.
    #       textInputPlaceholder: '...' # Only for iOS 10 when behavior is TextInput.
    #       parameters: # iOS 9 only. Use this dictionary to specify any behavior-specific data for the action. For example, if you set behavior to TextInput you can use the UIUserNotificationTextInputActionButtonTitleKey key, which lets you customize the title of the button displayed by the text input interface.
    #         UIUserNotificationTextInputActionButtonTitleKey: "Silence!"

    - name: Alert
      identifier: 'ALERT'
      actions:
        - identifier: 'SOUND_ALERT'
          title: 'Sound Alert'
          activationMode: 'background'
          authenticationRequired: yes
          destructive: yes
          behavior: 'default'
          context: 'default'
        - identifier: 'SILENCE_ALERT'
          title: 'Silence Alert'
          activationMode: 'background'
          authenticationRequired: yes
          destructive: no
          behavior: 'TextInput'
          context: 'default'
          textInputButtonTitle: 'Silence!'
          textInputPlaceholder: '...'
          parameters:
            UIUserNotificationTextInputActionButtonTitleKey: "Silence!"

    # - name: Map
    #   identifier: 'MAP'
    #   actions:
    #     - identifier: 'SOUND_ALERT'
    #       title: 'Sound Alert'
    #       activationMode: 'background'
    #       authenticationRequired: yes
    #       destructive: yes
    #       behavior: 'default'
    #       context: 'default'
    #     - identifier: 'SILENCE_ALERT'
    #       title: 'Silence Alert'
    #       activationMode: 'background'
    #       authenticationRequired: yes
    #       destructive: no
    #       behavior: 'TextInput'
    #       context: 'default'
    #       textInputButtonTitle: 'Silence!'
    #       textInputPlaceholder: '...'
    #       parameters:
    #         UIUserNotificationTextInputActionButtonTitleKey: "Silence!"

notify:
  - platform: ios
    name: iOSApp
    target: 'TOKEN'

script:
  notify_pesiphone6:
    alias: "Notify iPhone Pe"
    sequence:
      - service: notify.ios_pesiphone6
        data_template:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              badge: 1
              category: "ALERT"
  notify_juesiphone6splus:
    alias: "Notify iPhone Jue"
    sequence:
      - service: notify.ios_juesiphone6splus
        data_template:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              badge: 1
              category: "ALERT"
  notify_both:
    alias: "Notify iPhone Pe & Jue"
    sequence:
      - service: notify.ios_pesiphone6
        data_template:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              badge: 1
              category: "ALERT"
      - service: notify.ios_juesiphone6splus
        data_template:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            push:
              badge: 1
              category: "ALERT"

sensor:
  - platform: template
    sensors:
      battery_pesiphone6:
        friendly_name: "Battery on Pe iPhone 6"
        icon_template: '{% if is_state("sensor.battery_pesiphone6", "unknown") %}mdi:battery-unknown{% elif is_state_attr("device_tracker.pesiphone6", "battery_status", "Charging") %}mdi:battery-charging{% elif states.device_tracker.pesiphone6.attributes.battery <= 5 %}mdi:battery-outline{% elif states.device_tracker.pesiphone6.attributes.battery >= 95 %}mdi:battery{% else %}mdi:battery-{{(states.device_tracker.pesiphone6.attributes.battery|float / 10)|round*10}}{% endif %}'
        value_template: '{% if states.device_tracker.pesiphone6.attributes.battery %}{{ states.device_tracker.pesiphone6.attributes.battery|round }}{% else %}{{ states.sensor.battery_pesiphone6.state }}{% endif %}'
        unit_of_measurement: '%'
      battery_pesipadmini2:
        friendly_name: "Battery on Pe iPad Mini 2"
        icon_template: '{% if is_state("sensor.battery_pesipadmini2", "unknown") %}mdi:battery-unknown{% elif is_state_attr("device_tracker.pesipadmini2", "battery_status", "Charging") %}mdi:battery-charging{% elif states.device_tracker.pesipadmini2.attributes.battery <= 5 %}mdi:battery-outline{% elif states.device_tracker.pesipadmini2.attributes.battery >= 95 %}mdi:battery{% else %}mdi:battery-{{(states.device_tracker.pesipadmini2.attributes.battery|float / 10)|round*10}}{% endif %}'
        value_template: '{% if states.device_tracker.pesipadmini2.attributes.battery %}{{ states.device_tracker.pesipadmini2.attributes.battery|round }}{% else %}{{ states.sensor.battery_pesipadmini2.state }}{% endif %}'
        unit_of_measurement: '%'
      battery_juesiphone6splus:
        friendly_name: "Battery on Jue iPhone 6s Plus"
        icon_template: '{% if is_state("sensor.battery_juesiphone6splus", "unknown") %}mdi:battery-unknown{% elif is_state_attr("device_tracker.juesiphone6splus", "battery_status", "Charging") %}mdi:battery-charging{% elif states.device_tracker.juesiphone6splus.attributes.battery <= 5 %}mdi:battery-outline{% elif states.device_tracker.juesiphone6splus.attributes.battery >= 95 %}mdi:battery{% else %}mdi:battery-{{(states.device_tracker.juesiphone6splus.attributes.battery|float / 10)|round*10}}{% endif %}'
        value_template: '{% if states.device_tracker.juesiphone6splus.attributes.battery %}{{ states.device_tracker.juesiphone6splus.attributes.battery|round }}{% else %}{{ states.sensor.battery_juesiphone6splus.state }}{% endif %}'
        unit_of_measurement: '%'
      battery_juesipadmini2:
        friendly_name: "Battery on Jue iPad Mini 2"
        icon_template: '{% if is_state("sensor.battery_juesipadmini2", "unknown") %}mdi:battery-unknown{% elif is_state_attr("device_tracker.juesipadmini2", "battery_status", "Charging") %}mdi:battery-charging{% elif states.device_tracker.juesipadmini2.attributes.battery <= 5 %}mdi:battery-outline{% elif states.device_tracker.juesipadmini2.attributes.battery >= 95 %}mdi:battery{% else %}mdi:battery-{{(states.device_tracker.juesipadmini2.attributes.battery|float / 10)|round*10}}{% endif %}'
        value_template: '{% if states.device_tracker.juesipadmini2.attributes.battery %}{{ states.device_tracker.juesipadmini2.attributes.battery|round }}{% else %}{{ states.sensor.battery_juesipadmini2.state }}{% endif %}'
        unit_of_measurement: '%'
      battery_pesipodtouch4:
        friendly_name: "Battery on iPod Touch BMW"
        icon_template: '{% if is_state("sensor.battery_pesipodtouch4", "unknown") %}mdi:battery-unknown{% elif is_state_attr("device_tracker.pesipodtouch4", "battery_status", "Charging") %}mdi:battery-charging{% elif states.device_tracker.pesipodtouch4.attributes.battery <= 5 %}mdi:battery-outline{% elif states.device_tracker.pesipodtouch4.attributes.battery >= 95 %}mdi:battery{% else %}mdi:battery-{{(states.device_tracker.pesipodtouch4.attributes.battery|float / 10)|round*10}}{% endif %}'
        value_template: '{% if states.device_tracker.pesipodtouch4.attributes.battery %}{{ states.device_tracker.pesipodtouch4.attributes.battery|round }}{% else %}{{ states.sensor.battery_pesipodtouch4.state }}{% endif %}'
        unit_of_measurement: '%'
      battery_pepe:
        friendly_name: "Battery on Pe Macbook Pro"
        icon_template: '{% if is_state("sensor.battery_pepe", "unknown") %}mdi:battery-unknown{% elif is_state_attr("device_tracker.pepe", "battery_status", "Charging") %}mdi:battery-charging{% elif states.device_tracker.pepe.attributes.battery <= 5 %}mdi:battery-outline{% elif states.device_tracker.pepe.attributes.battery >= 95 %}mdi:battery{% else %}mdi:battery-{{(states.device_tracker.pepe.attributes.battery|float / 10)|round*10}}{% endif %}'
        value_template: '{% if states.device_tracker.pepe.attributes.battery %}{{ states.device_tracker.pepe.attributes.battery|round }}{% else %}{{ states.sensor.battery_pepe.state }}{% endif %}'
        unit_of_measurement: '%'
