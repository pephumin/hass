binary_sensor:
  - platform: ping
    host: 192.168.1.1
    name: "Deeper"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.2
    name: "Pluto"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.3
    name: "Sun"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.4
    name: "Uranus"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.5
    name: "Neptune"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.6
    name: "Mercury"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.7
    name: "Apollo"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.8
    name: "Sputnik"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.10
    name: "Cookie"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.13
    name: "Candy"
    count: 2
    scan_interval: 30
  # - platform: ping
  #   host: 192.168.1.13
  #   name: "Broadlink RM Pro"
  - platform: ping
    host: 192.168.1.14
    name: "Broadlink RM Mini A"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.15
    name: "Broadlink RM Mini B"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.16
    name: "Doughnut"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.17
    name: "Biscuit"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.18
    name: "Hyperion"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.19
    name: "Charon"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.20
    name: "Titan"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.21
    name: "Europa"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.22
    name: "Ganymede"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.23
    name: "Callisto"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.24
    name: "Mimas"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.25
    name: "Pandora"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.26
    name: "Phoebe"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.27
    name: "Calypso"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.28
    name: "SVA"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.29
    name: "SVB"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.40
    name: "Moon"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.41
    name: "Wemos Lite Party"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.42
    name: "NodeMCU Matrix Clock"
    count: 2
    scan_interval: 30
  # - platform: ping
  #   host: 192.168.1.43
  #   name: ""
  #   count: 2
  #   scan_interval: 30
  - platform: ping
    host: 192.168.1.44
    name: "Earth"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.78
    name: "Foscam Black"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.79
    name: "Foscam White"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.80
    name: "Foscam R2"
    count: 2
    scan_interval: 30
  - platform: ping
    host: 192.168.1.81
    name: "Boxie"
    count: 2
    scan_interval: 30

input_boolean:
  presence_xdj_rx:
    name: "XDJ-RX online"
    initial: off
    icon: mdi:music

counter:
  bedroom:
    name: "Bedroom Reboot Counts"
    initial: 0
    step: 1
    icon: mdi:counter
    restore: false
  commonroom:
    name: "Common Room Reboot Counts"
    initial: 0
    step: 1
    icon: mdi:counter
    restore: false
  firstfloor:
    name: "Frst Floor Reboot Counts"
    initial: 0
    step: 1
    icon: mdi:counter
    restore: false

group:
  online_cr:
    name: "Online Status Common Room"
    icon: mdi:lan-connect
    view: false
    control: hidden
    entities:
      - binary_sensor.deeper
      - binary_sensor.apollo
      - binary_sensor.pluto
      - binary_sensor.broadlink_rm_mini_b
      - binary_sensor.foscam_r2
      - binary_sensor.candy
      - binary_sensor.titan
      - binary_sensor.ganymede
      - binary_sensor.mimas
      - binary_sensor.phoebe
      - binary_sensor.wemos_lite_party
      - binary_sensor.nodemcu_matrix_clock
      - binary_sensor.denon
      - binary_sensor.android_box
      - binary_sensor.biscuit
      - binary_sensor.apple_tv
      - binary_sensor.svb
      - binary_sensor.dune
      - binary_sensor.xdj_rx
  online_br:
    name: "Online Status Bedroom"
    icon: mdi:lan-connect
    view: false
    control: hidden
    entities:
      - binary_sensor.neptune
      - binary_sensor.broadlink_rm_mini_a
      - binary_sensor.doughnut
      - binary_sensor.moon
      - binary_sensor.europa
      - binary_sensor.pandora
      - binary_sensor.hyperion
  online_ff:
    name: "Online Status First Floor"
    icon: mdi:lan-connect
    view: false
    control: hidden
    entities:
      - binary_sensor.uranus
      - binary_sensor.mercury
      - binary_sensor.foscam_white
      - binary_sensor.earth
      - binary_sensor.charon
      - binary_sensor.callisto
      - binary_sensor.front_door
      - binary_sensor.window
      - binary_sensor.bmw
      - binary_sensor.pong
      - binary_sensor.freed

automation:

  - alias: 'Webcam Switch Restart'
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ is_state("binary_sensor.foscam_r2", "off") }}'
      - platform: template
        value_template: '{{ is_state("binary_sensor.broadlink_rm_mini_b", "off") }}'
      - platform: template
        value_template: '{{ is_state("binary_sensor.boxie", "off") }}'
    condition:
      - condition: template
        # value_template: '{{ (as_timestamp(now())-as_timestamp(states.automation.webcam_switch_restart.last_triggered))/60 > 5 }}'
        value_template: '{% if states.automation.webcam_switch_restart.attributes.last_triggered == "None" %}{{ (as_timestamp(now())-as_timestamp(states.automation.webcam_switch_restart.last_updated))/60 > 5 }}{% else %}{{ (as_timestamp(now())-as_timestamp(states.automation.webcam_switch_restart.attributes.last_triggered))/60 > 5 }}{% endif %}'
    action:
      - service: script.turn_on
        entity_id: script.restart_ganymede
      - service: counter.increment
        entity_id: counter.commonroom
      - service: script.notifying
        data_template:
          email: "false"
          tv: "false"
          line: "false"
          speak: "true"
          audio: "false"
          light: "false"
          mobile: "pe"
          message: "Restarting Webcam (Ganymede)"

  - alias: 'Hyperion Switch Restart'
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ is_state("binary_sensor.neptune", "off") }}'
      - platform: template
        value_template: '{{ is_state("binary_sensor.moon", "off") }}'
      - platform: template
        value_template: '{{ is_state("binary_sensor.broadlink_rm_mini_a", "off") }}'
      - platform: template
        value_template: '{{ is_state("binary_sensor.doughnut", "off") }}'
    condition:
      - condition: template
        # value_template: '{{ (as_timestamp(now())-as_timestamp(states.automation.hyperion_switch_restart.last_changed))/60 > 5 }}'
        value_template: '{% if states.automation.hyperion_switch_restart.attributes.last_triggered == "None" %}{{ (as_timestamp(now())-as_timestamp(states.automation.hyperion_switch_restart.last_updated))/60 > 5 }}{% else %}{{ (as_timestamp(now())-as_timestamp(states.automation.hyperion_switch_restart.attributes.last_triggered))/60 > 5 }}{% endif %}'
    action:
      - service: script.turn_on
        entity_id: script.restart_hyperion
      - service: counter.increment
        entity_id: counter.bedroom
      - service: script.notifying
        data_template:
          email: "false"
          tv: "false"
          line: "false"
          speak: "true"
          audio: "false"
          light: "false"
          mobile: "pe"
          message: "Restarting Hyperion"

  - alias: 'Charon Switch Restart'
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ is_state("binary_sensor.foscam_white", "off") }}'
      - platform: template
        value_template: '{{ is_state("binary_sensor.earth", "off") }}'
      - platform: template
        value_template: '{{ is_state("binary_sensor.mercury", "off") }}'
    condition:
      - condition: template
        # value_template: '{{ (as_timestamp(now())-as_timestamp(states.automation.charon_switch_restart.last_changed))/60 > 5 }}'
        value_template: '{% if states.automation.charon_switch_restart.attributes.last_triggered == "None" %}{{ (as_timestamp(now())-as_timestamp(states.automation.charon_switch_restart.last_updated))/60 > 5 }}{% else %}{{ (as_timestamp(now())-as_timestamp(states.automation.charon_switch_restart.attributes.last_triggered))/60 > 5 }}{% endif %}'
    action:
      - service: script.turn_on
        entity_id: script.restart_charon
      - service: counter.increment
        entity_id: counter.firstfloor
      - service: script.notifying
        data_template:
          email: "false"
          tv: "false"
          line: "false"
          speak: "true"
          audio: "false"
          light: "false"
          mobile: "pe"
          message: "Restarting Charon"

  - alias: 'Hyperion Switch Always On'
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ is_state("switch.hyperion", "off") }}'
    condition:
      - condition: template
        value_template: '{{ (as_timestamp(now())-as_timestamp(states.automation.hyperion_switch_always_on.last_changed))/60 > 5 }}'
    action:
      - service: switch.turn_on
        entity_id: switch.hyperion
      - service: script.notifying
        data_template:
          email: "false"
          tv: "false"
          line: "false"
          speak: "true"
          audio: "false"
          light: "false"
          mobile: "pe"
          message: "Get Hyperion Online"

  - alias: 'Charon Switch Always On'
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ is_state("switch.charon", "off") }}'
    condition:
      - condition: template
        value_template: '{{ (as_timestamp(now())-as_timestamp(states.automation.charon_switch_always_on.last_changed))/60 > 5 }}'
    action:
      - service: switch.turn_on
        entity_id: switch.charon
      - service: script.notifying
        data_template:
          email: "false"
          tv: "false"
          line: "false"
          speak: "true"
          audio: "false"
          light: "false"
          mobile: "pe"
          message: "Get Charon Online"

  - alias: 'Genymede Switch Always On'
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ is_state("switch.ganymede", "off") }}'
    condition:
      - condition: template
        value_template: '{{ (as_timestamp(now())-as_timestamp(states.automation.ganymede_switch_always_on.last_changed))/60 > 5 }}'
    action:
      - service: switch.turn_on
        entity_id: switch.ganymede
      - service: script.notifying
        data_template:
          email: "false"
          tv: "false"
          line: "false"
          speak: "true"
          audio: "false"
          light: "false"
          mobile: "pe"
          message: "Get Ganymede Online"

  - alias: 'Calypso Switch Always On'
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ is_state("switch.calypso", "off") }}'
    condition:
      - condition: template
        value_template: '{{ (as_timestamp(now())-as_timestamp(states.automation.calypso_switch_always_on.last_changed))/60 > 5 }}'
    action:
      - service: switch.turn_on
        entity_id: switch.calypso
      - service: script.notifying
        data_template:
          email: "false"
          tv: "false"
          line: "false"
          speak: "true"
          audio: "false"
          light: "false"
          mobile: "pe"
          message: "Get Calypso Online"

  - alias: "Car Online"
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.bmw
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: binary_sensor.pong
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: binary_sensor.freed
        from: 'off'
        to: 'on'
    condition:
      - condition: template
        value_template: '{{ is_state("light.white_garage", "off") and is_state("sun.sun", "below_horizon") }}'
    action:
      - service: light.turn_on
        entity_id: light.white_garage
      - service: script.notifying
        data_template:
          email: "false"
          tv: "false"
          line: "false"
          speak: "false"
          audio: "chime"
          light: "false"
          mobile: "pe"
          message: 'Turn on Garage light because {{ trigger.from_state.attributes.friendly_name }} gets online'

  - alias: "Car Offline"
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.bmw
        from: 'on'
        to: 'off'
        for:
          minutes: 1
      - platform: state
        entity_id: binary_sensor.pong
        from: 'on'
        to: 'off'
        for:
          minutes: 1
      - platform: state
        entity_id: binary_sensor.freed
        from: 'on'
        to: 'off'
        for:
          minutes: 1
    condition:
      - condition: template
        value_template: '{{ is_state("light.white_garage", "on") }}'
    action:
      - service: light.turn_off
        entity_id: light.white_garage
      - service: script.notifying
        data_template:
          email: "false"
          tv: "false"
          line: "false"
          speak: "false"
          audio: "chime"
          light: "false"
          mobile: "pe"
          message: 'Turn off Garage light because {{ trigger.from_state.attributes.friendly_name }} has gone offline'

  - alias: "XDJ-RX is online"
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ is_state("device_tracker.ping_xdj_rx", "home") and is_state("binary_sensor.xdj_rx", "on") }}'
    condition:
      - condition: template
        value_template: '{{ is_state("input_boolean.presence_xdj_rx", "off")  }}'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.presence_xdj_rx

  - alias: "XDJ-RX is offline"
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: '{{ is_state("device_tracker.ping_xdj_rx", "not_home") and is_state("binary_sensor.xdj_rx", "off") }}'
    condition:
      - condition: template
        value_template: '{{ is_state("input_boolean.presence_xdj_rx", "on") }}'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.presence_xdj_rx

  - alias: "XDJ-RX is on"
    trigger:
      - platform: state
        entity_id: input_boolean.presence_xdj_rx
        from: 'off'
        to: 'on'
        for:
          minutes: 1
          seconds: 30
    condition:
      - condition: template
        value_template: '{{ is_state("binary_sensor.xdj_rx", "on") }}'
    action:
      - service: script.notifying
        data_template:
          email: "true"
          tv: "true"
          line: "true"
          speak: "true"
          audio: "pip"
          light: "false"
          mobile: "pe"
          message: "XDJ-RX has been turned on!"

  - alias: "XDJ-RX is off"
    trigger:
      - platform: state
        entity_id: input_boolean.presence_xdj_rx
        from: 'on'
        to: 'off'
        for:
          minutes: 1
          seconds: 30
    condition:
      - condition: template
        value_template: '{{ is_state("binary_sensor.xdj_rx", "off") }}'
    action:
      - service: script.notifying
        data_template:
          email: "true"
          tv: "true"
          line: "true"
          speak: "true"
          audio: "pip"
          light: "false"
          mobile: "pe"
          message: "XDJ-RX has been turned off!"
