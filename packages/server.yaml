binary_sensor:
  - platform: trend
    sensors:
      saturn_temperature_up:
        friendly_name: 'HDDs Temperature Increasing'
        entity_id: sensor.average_temperature
        device_class: heat
  - platform: threshold
    threshold: 41
    type: upper
    entity_id: sensor.average_temperature
    name: 'Saturn Disks are hot'
    device_class: heat

# alert:
#   hot_saturn:
#     name: Alert when Saturn is hot
#     done_message: Saturn has cooled down
#     entity_id: binary_sensor.saturn_is_hot
#     state: 'on'
#     repeat: 30
#     can_acknowledge: true
#     skip_first: false
#     notifiers:
#       - alert

shell_command:
  wag160n_reboot: !secret wag160n_reboot

sensor:
  - platform: synologydsm
    name: Saturn
    host: !secret synology_ip
    username: !secret my_username
    password: !secret my_longer_password
    monitored_conditions:
      - disk_temp
  - platform: systemmonitor
    resources:
      - type: last_boot
      - type: since_last_boot
      - type: processor_use
      - type: memory_use_percent
  - platform: speedtest
    minute:
      - 0
      - 5
      - 10
      - 15
      - 20
      - 25
      - 30
      - 35
      - 40
      - 45
      - 50
      - 55
    monitored_conditions:
      - ping
      - download
      - upload
  - platform: min_max
    type: max
    name: "Maximum Disk Temperature"
    round_digits: 1
    entity_ids:
      - sensor.temperature_sda
      - sensor.temperature_sdb
      - sensor.temperature_sdc
      - sensor.temperature_sdd
  - platform: statistics
    entity_id: sensor.average_disk_temperature
    name: "Average Disk Temperature"
  - platform: template
    sensors:
      average_disk_temperature:
        friendly_name: 'Average Disk Temperature'
        unit_of_measurement: 'Â°C'
        icon_template: mdi:thermometer
        value_template: '{{ states.sensor.maximum_disk_temperature.attributes.mean }}'
        # value_template: '{% if states.sensor.temperature_sda.state and states.sensor.temperature_sdb.state and states.sensor.temperature_sdc.state and states.sensor.temperature_sdd.state %}{{ (float(states.sensor.temperature_sda.state) + float(states.sensor.temperature_sdb.state) + float(states.sensor.temperature_sdc.state) + float(states.sensor.temperature_sdd.state)) / 4 | round(2) }}{% endif %}'
      uptime:
        friendly_name: Uptime
        icon_template: mdi:timelapse
        value_template: >-
          {%- if states.sensor.since_last_boot.state -%}
            {%- set slb = states.sensor.since_last_boot.state.split(' ') -%}
            {%- set count = slb | length -%}
            {%- set hms = slb[count - 1] -%}
            {%- set hms_trimmed = hms.split('.')[0] -%}
            {%- set hms_split = hms_trimmed.split(':') -%}
            {%- set hours = hms_split[0] | int -%}
            {%- if count == 3 -%}
              {{ slb[0] ~ ' ' ~ slb[1] ~ ' ' }}
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if hours == 1 -%}
                1 hour
              {%- else -%}
                {{ hours }} hours
              {%- endif -%}
            {%- endif -%}
          {%- endif -%}
  # - platform: statistics
  #   entity_id: sensor.maximum_disk_temperature
  #   name: "Maximum Disk Temperature"
