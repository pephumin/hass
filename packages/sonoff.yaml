switch:
  - platform: mqtt
    name: "Ganymede"
    state_topic: "stat/ganymede/POWER"
    command_topic: "cmnd/ganymede/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true

light:
  - platform: mqtt
    name: "Callisto"
    state_topic: "stat/callisto/POWER"
    command_topic: "cmnd/callisto/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true

sensor:
  - platform: mqtt
    name: "Ganymede Uptime"
    state_topic: "tele/ganymede/STATE"
    value_template: "{{ value_json.Uptime }}"
    unit_of_measurement: "Hour(s)"
  - platform: mqtt
    name: "Ganymede Energy Today"
    state_topic: "tele/ganymede/ENERGY"
    value_template: "{{ value_json.Today | round(1) }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Ganymede Energy Yesterday"
    state_topic: "tele/ganymede/ENERGY"
    value_template: "{{ value_json.Yesterday | round(1) }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Ganymede Energy Total"
    state_topic: "tele/ganymede/ENERGY"
    value_template: "{{ value_json.Total | round(1) }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Ganymede Power"
    state_topic: "tele/ganymede/ENERGY"
    value_template: "{{ value_json.Power | round(1) }}"
    unit_of_measurement: "Watts"
  - platform: mqtt
    name: "Ganymede Power Factor"
    state_topic: "tele/ganymede/ENERGY"
    value_template: "{{ value_json.Factor | round(2) }}"
  - platform: mqtt
    name: "Ganymede Current"
    state_topic: "tele/ganymede/ENERGY"
    value_template: "{{ value_json.Current | round(2) }}"
    unit_of_measurement: "Amps"
  - platform: mqtt
    name: "Ganymede Voltage"
    state_topic: "tele/ganymede/ENERGY"
    value_template: "{{ value_json.Voltage | round(0) }}"
    unit_of_measurement: "Volts"
  - platform: mqtt
    name: "Callisto Uptime"
    state_topic: "tele/callisto/STATE"
    value_template: "{{ value_json.Uptime }}"
    unit_of_measurement: "Hour(s)"

automation:

  - alias: "Auto Double Subwoofer On"
    trigger:
      - platform: state
        entity_id: sensor.denon_source
        to: 'Music'
      - platform: state
        entity_id: sensor.denon_source
        to: 'MPLAY'
      - platform: state
        entity_id: sensor.denon_source
        to: 'BD'
      - platform: state
        entity_id: sensor.denon_source
        to: 'DVD'
      # - platform: template
      #   value_template: '{% if (is_state("sensor.denon_source", "Music") or is_state("sensor.denon_source", "MPLAY") or is_state("sensor.denon_source", "BD") or is_state("sensor.denon_source", "DVD")) %}true{% endif %}'
    condition:
      - condition: template
        value_template: '{{ (is_state("switch.titan", "on") and is_state("media_player.denon", "on")) }}'
    action:
      - service: switch.turn_on
        entity_id: switch.ganymede

  - alias: "Auto Double Subwoofer Off"
    trigger:
      - platform: state
        entity_id: sensor.denon_source
        to: 'SAT/CBL'
      - platform: state
        entity_id: sensor.denon_source
        to: 'Game'
      - platform: state
        entity_id: sensor.denon_source
        to: 'AUX'
      - platform: state
        entity_id: sensor.denon_source
        to: 'TV'
      # - platform: template
      #   value_template: '{% if (is_state("sensor.denon_source", "SAT/CBL") or is_state("sensor.denon_source", "Game") or is_state("sensor.denon_source", "AUX") or is_state("sensor.denon_source", "TV")) %}true{% endif %}'
      - platform: state
        entity_id: switch.titan
        from: 'on'
        to: 'off'
      - platform: state
        entity_id: media_player.denon
        from: 'on'
        to: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.ganymede
