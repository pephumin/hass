input_slider:
  timerhours:
    name: Hour
    icon: mdi:timer
    initial: 0
    min: 0
    max: 12
    step: 1
  timerminutes:
    name: Minutes
    icon: mdi:timer
    initial: 0
    min: 0
    max: 55
    step: 5

input_boolean:
  activate_timer:
    name: "Activate Timer"
    initial: off
    icon: mdi:alarm-check

input_select:
  timer_for:
    name: "Timer For"
    options:
      - 'None'
      - 'All Lights'
      - 'Lights Bedroom'
      - 'Lights Common Room'
      - 'Lights First Floor'
      - 'Common Room Home Theatre'
      - 'Bedroom Sound System'
    initial: 'None'
    icon: mdi:clock-snooze

sensor:
  - platform: template
    sensors:
      timer_duration:
        friendly_name: 'Timer Set'
        value_template: '{% if states.input_slider.timerhours.state|round(0)|string|length == 1 %}0{% endif %}{{ states.input_slider.timerhours.state|round(0)|string }}:{% if states.input_slider.timerminutes.state|round(0)|string|length == 1 %}0{% endif %}{{ states.input_slider.timerminutes.state|round(0)|string }}'
        icon_template: '{% if states.input_boolean.activate_timer.state == "on" %}mdi:alarm-multiple{% elif states.input_boolean.activate_timer.state == "off" %}mdi:alarm-off{% else %}mdi:alarm{% endif %}'
        entity_id: input_slider.timerminutes, input_slider.timerhours

script:
  timer_all_lights:
    alias: "Timer for All Lights"
    sequence:
      - delay: '{{ states.sensor.timer_duration.state }}:00'
      - service: light.turn_off
        entity_id: group.lights_all
  timer_lights_bedroom:
    alias: "Timer for Lights Bedroom"
    sequence:
      - delay: '{{ states.sensor.timer_duration.state }}:00'
      - service: light.turn_off
        entity_id: group.bedroom_lights_all
  timer_lights_common_room:
    alias: "Timer for Lights Common Room"
    sequence:
      - delay: '{{ states.sensor.timer_duration.state }}:00'
      - service: light.turn_off
        entity_id: group.common_room_lights_all
  timer_lights_first_floor:
    alias: "Timer for Lights First Floor"
    sequence:
      - delay: '{{ states.sensor.timer_duration.state }}:00'
      - service: light.turn_off
        entity_id: group.first_floor_lights_all
  timer_common_room_home_theatre:
    alias: "Timer for Common Room Home Theatre"
    sequence:
      - delay: '{{ states.sensor.timer_duration.state }}:00'
      - service: switch.turn_off
        entity_id: switch.hometheatre
  timer_bedroom_sound_system:
    alias: "Timer for Bedroom Sound System"
    sequence:
      - delay: '{{ states.sensor.timer_duration.state }}:00'
      - service: switch.turn_off
        entity_id: switch.bedroomsound

automation:
  - alias: 'Set Timer'
    initial_state: 'off'
    hide_entity: True
    trigger:
      - platform: state
        entity_id: input_select.timer_for
    condition:
      - condition: template
        value_template: '{% if not is_state("input_select.timer_for", "None") %}{% endif %}'
    action:
      - service: script.turn_on
        data_template:
          entity_id: '{% if trigger.to_state.state == "All Lights" %}script.timer_all_lights{% elif trigger.to_state.state == "Lights Bedroom" %}script.timer_lights_bedroom{% elif trigger.to_state.state == "Lights Common Room" %}script.timer_lights_common_room{% elif trigger.to_state.state == "Lights First Floor" %}script.timer_lights_first_floor{% elif trigger.to_state.state == "Common Room Home Theatre" %}script.timer_common_room_home_theatre{% elif trigger.to_state.state == "Bedroom Sound System" %}script.timer_bedroom_sound_system{% endif %}'
      - service: input_boolean.turn_off
        entity_id: input_boolean.activate_timer

  - alias: "Enable Timer"
    trigger:
      - platform: state
        entity_id: input_select.timer_for
        from: 'None'
    condition:
      - condition: or
        conditions:
          - condition: template
            value_template: '{% if not is_state("input_slider.timerhours", 0) %}true{% else %}false{% endif %}'
          - condition: template
            value_template: '{% if not is_state("input_slider.timerminutes", 0) %}true{% else %}false{% endif %}'
    action:
      - service: automation.turn_on
        entity_id: automation.set_timer
      - service: input_boolean.turn_on
        entity_id: input_boolean.activate_timer

  - alias: "Disable Timer"
    trigger:
      - platform: state
        entity_id: input_select.timer_for
        to: 'None'
    condition:
      - condition: and
        conditions:
          - condition: template
            value_template: '{% if is_state("input_slider.timerhours", 0) %}true{% else %}false{% endif %}'
          - condition: template
            value_template: '{% if is_state("input_slider.timerminutes", 0) %}true{% else %}false{% endif %}'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.activate_timer
